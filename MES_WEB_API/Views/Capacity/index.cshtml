@{
    ViewBag.Title = "Index";
    Layout = "~/Views/_Layout.cshtml";
}

@model MES_WEB_API.Controllers.CapacityController.TestData

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<link href="https://cdn.datatables.net/1.10.15/css/dataTables.bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.datatables.net/responsive/2.1.1/css/responsive.bootstrap.min.css" rel="stylesheet" />

<script src="https://cdn.datatables.net/1.10.15/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap4.min.js "></script>


<!-- Content Header (Page header) -->
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>설비가동률</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">설비가동률</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<!-- Main content -->
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div style="display:none;" class="row">
                    <div class="form-group">
                        @Html.HiddenFor(m => m.columns, new { @id = "dataObjCol", placeholder = Html.DisplayNameFor(m => m.columns), @class = "form-control" })
                        @Html.HiddenFor(m => m.data, new { @id = "dataObjData", placeholder = Html.DisplayNameFor(m => m.data), @class = "form-control" })
                    </div>
                </div>
                <hr />

                <div class="row">
                    <div>
                        <table class="table table-striped table-bordered table-hover"
                               id="TableId"
                               cellspacing="0"
                               align="right"
                               width="100%" border="1"></table>
                    </div>
                </div>
                <hr />



                <div class="row">
                    <div class="col-md-10">
                        <!-- AREA CHART -->
                        <div class="card bg-light mb-3">
                            <div class="card-header">
                                <h3 class="card-title">날짜별가동률</h3>

                                <div class="card-tools">
                                    <button type="button" class="btn btn-tool" data-card-widget="collapse">
                                        <i class="fas fa-minus"></i>
                                    </button>
                                    <button type="button" class="btn btn-tool" data-card-widget="remove"><i class="fas fa-times"></i></button>
                                </div>
                            </div>
                            @*<div class="card-body">
                                    <div class="chart">
                                        <canvas id="line-chart" style="min-height: 250px; height: 250px; max-height: 250px; max-width: 100%;"></canvas>
                                    </div>
                                </div>*@
                            <div>
                                <canvas id="myChart"></canvas>
                            </div>
                            <!-- /.card-body -->
                        </div>

                    </div>

                </div>
                <!-- /.row -->
            </div><!-- /.container-fluid -->
        </div>
    </div>
</section>
<!-- /.content -->
@{
    string labels = ViewBag.Labels; //x축

    string label1 = ViewBag.Label1;
    string data1 = ViewBag.data1;

    string label2 = ViewBag.Label2;
    string data2 = ViewBag.data2;

    string label3 = ViewBag.Label3;
    string data3 = ViewBag.data3;
}

@section Scripts
    {
    @*<script>
            $(function () {
                /* ChartJS
                 * -------
                 * Here we will create a few charts using ChartJS
                 */

                //--------------
                //- AREA CHART -
                //--------------

                // Get context with jQuery - using jQuery's .get() method.
                //var areaChartCanvas = $('#areaChart').get(0).getContext('2d')

                var temp = "@labels"; //"1월,2월,3월...12월"
                var arrTemp = temp.split(','); // ['1월', '2월'..]

                var areaChartData = {
                    labels: arrTemp,
                    datasets: [
                        {
                            label: '@label1',
                            borderColor: 'rgba(60,141,188,0.8)',
                            pointRadius: false,
                            pointColor: '#3b8bba',
                            pointStrokeColor: 'rgba(60,141,188,1)',
                            pointHighlightFill: '#fff',
                            pointHighlightStroke: 'rgba(60,141,188,1)',
                            data: @data1
                        },
                        {
                            label: '@label2',
                            borderColor: 'rgba(210, 214, 222, 1)',
                            pointRadius: false,
                            pointColor: 'rgba(210, 214, 222, 1)',
                            pointStrokeColor: '#c1c7d1',
                            pointHighlightFill: '#fff',
                            pointHighlightStroke: 'rgba(220,220,220,1)',
                            data: @data2
                        },
                        {
                            label: '@label3',
                            borderColor: 'rgba(210, 105, 84, 1)',
                            pointRadius: false,
                            pointColor: 'rgba(210, 105, 84, 1)',
                            pointStrokeColor: '#c1c7d1',
                            pointHighlightFill: '#fff',
                            pointHighlightStroke: 'rgba(220,220,220,1)',
                            data: @data3
                        }
                    ]
                }

                var areaChartOptions = {
                    maintainAspectRatio: false,
                    responsive: true,
                    legend: {
                        display: true
                    },
                    scales: {
                        xAxes: [{
                            gridLines: {
                                display: false,
                            }
                        }],
                        yAxes: [{
                            gridLines: {
                                display: false,
                            }
                        }]
                    }
                }

                // This will get the first returned node in the jQuery collection.
                //var areaChart = new Chart(areaChartCanvas, {
                //    type: 'line',
                //    data: areaChartData,
                //    options: areaChartOptions
                //})
                //var lineChartCanvas = $('#lineChart').get(0).getContext('2d')
                var lineChartOptions = jQuery.extend(true, {}, areaChartOptions)
                var lineChartData = jQuery.extend(true, {}, areaChartData)
                lineChartData.datasets[0].fill = false;
                lineChartData.datasets[1].fill = false;
                lineChartOptions.datasetFill = false

                //var lineChart = new Chart(lineChartCanvas, {
                //    type: 'line',
                //    data: lineChartData,
                //    options: lineChartOptions
                //})

                var line_data1 = {
                    data: @data1,
                    color: '#3c8dbc'
                }
                var line_data2 = {
                    data: @data2,
                    color: '#00c0ef'
                }
                var line_data3 = {
                    data: @data3,
                    color: '#00c0ef'
                }
                $.plot('#line-chart', [line_data1, line_data2, line_data3], {
                    grid: {
                        hoverable: true,
                        borderColor: '#f3f3f3',
                        borderWidth: 1,
                        tickColor: '#f3f3f3'
                    },
                    series: {
                        shadowSize: 0,
                        lines: {
                            show: true
                        },
                        points: {
                            show: true
                        }
                    },
                    lines: {
                        fill: false,
                        color: ['#3c8dbc', '#f56954']
                    },
                    yaxis: {
                        show: true
                    },
                    xaxis: {
                        show: true
                    }
                })
                //Initialize tooltip on hover
                $('<div class="tooltip-inner" id="line-chart-tooltip"></div>').css({
                    position: 'absolute',
                    display: 'none',
                    opacity: 0.8
                }).appendTo('body')
                $('#line-chart').bind('plothover', function (event, pos, item) {

                    if (item) {
                        var x = item.datapoint[0].toFixed(2),
                            y = item.datapoint[1].toFixed(2)

                        $('#line-chart-tooltip').html(item.series.label + ' of ' + x + ' = ' + y)
                            .css({
                                top: item.pageY + 5,
                                left: item.pageX + 5
                            })
                            .fadeIn(200)
                    } else {
                        $('#line-chart-tooltip').hide()
                    }

                })


            })


    </script>*@

    <script type="text/javascript">
        $(document).ready(function () {
            //debugger;
            alert($('#dataObjCol').val());
            var dataObjCol = JSON.parse($('#dataObjCol').val());
            var dataObjData = JSON.parse($('#dataObjData').val());

            // Datatable settings.
            $('#TableId').DataTable(
                {
                    "data": dataObjData,
                    "columns": dataObjCol,
                    "bPaginate": false,
                    "bFilter": false,
                    "bInfo": false,
                    "autoWidth": false,
                    "bSort": false,
                    "columnDefs": [
                        {
                            "width": "28px",
                            "targets": "0",
                            "className": "text-right"
                        },
                        {
                            "width": "2px",
                            "targets": "1",
                            "className": "text-right"
                        }
                    ]
                });
        });
    </script>

    <script>

        var temp = "@labels"; //"1월,2월,3월...12월"
        var arrTemp = temp.split(','); // ['1월', '2월'..]

        const labels = arrTemp;
        const data = {
            labels: labels,
            datasets: [{
                label: '@label3',
                borderColor: 'rgb(96, 56, 87)',
                data: @data3
            }, {
                label: '@label2',
                borderColor: 'rgb(200, 77, 96)',
                data: @data2
            },{
                label: '@label1',
                borderColor: 'rgb(52, 78, 98)',
                data: @data1
            }]
        };

        const config = {
            type: 'line',
            data,
            options: {}
        };

        var myChart = new Chart(
            document.getElementById('myChart'),
            config
        );

    </script>
}