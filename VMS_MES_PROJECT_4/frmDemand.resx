<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ExcelMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        kX8SWt5+E/vjbbH98/GJnR91stMi/yS03N0r9sOVsf1zcfHOjzrZsTHmk3q23u3Lx6x/Gds/F6/a+VEX
        8L3IPwktb++M9XtIjHku9iWGi3w88k9Cy9t3Yv1eEWOei1N3feAVvCnyT0LL3SNj3b4Z2z8H18XmnhiH
        zhmRfwJa7t4d6/WwGPN5ln16T8Qi/WYgf4n8k9Dydn3bvWOdPhBjnoNX7/rAK/l85J+Elrs3xvo8sO2f
        MebxP2rHx17KhZF/Alru/tR2cqzLR2PMY/91HNL//79Fv2PsvyP/JLTc9ftCrsUTY9y9LNb8O5Bh/G+A
        9QvqOVHfPdt+HOMe96N3e/g1vSjyT0DLX/9fgQdFbR+LcY/3uzs+9rKOi8194rJPQMvfD9ruEzW9NcY+
        1kP59t/b8+bIP/msxr4Wm38UKnl5jH2Mv227x04fQXH9k2H9R8Dsk89qrH+JyAlRw2vaboyxj+91O30E
        K9E/HJJ94lmd9dtk9Q/bZOlvVHvP/zmubffH2PwykdvoXxvl+wHt1uvvFHxu7F5/o883DnC8d2QX7vBx
        rM5LI/+ks3r7TOzmE3P9X/3+I//1kx5H/6lm374abaj+rqj+1eDZJ5zVW//cSL/91ozfDfQb1DwvNn+F
        mHX8/b0OZ0w49r3zmLZ/RP4JZzX317b3xea+ktvqb0HuP5L/aAfH/cEBx3toXBD5J5rV309jE4P+r/dp
        cfT31fe/NvV/hfufnb8au3sbeg/M8Uc5Nm6lv5CfivwTzNa1fp/JHoX+TTu/unm/uPm//S7xmA71J/4O
        qn9O/OeRf1KZbbP+i20O6BFt10b+i2h2kPm03wD9lz03RP6LabZkl8Uh/6z/SM9q+1fkv6hmd2SfDX/v
        H65HwE8CVn2fbLtbMMXjw+8ErO7e33anYKr+i8H+Z57sF9vslvVPC/b3FrAj/U+E3idgFdY/wPb0IMV5
        4W3Dlrer2x4QpOqfHfABItvl/hybzxD0Tw9SQP9760vC/QRs/q5oOyUoqd9U5B0x7/Pcdnj35bYzg1Xo
        n/rqv5V1t2HbZv0z/P1mJP3Pz6xQv/PqC9s+1/afyD+hbB27JjY3H3l4sDf6zR/67Z762zR9K7Hdev1f
        +n67rn4T0P5jvvfw77n+29snxOabafsvdb4T3mZ8WNYv9mvavhibC/4FbScGxObGk6e3PbXtnLZzY/Ne
        A1vP+pd49FvMf6jtw21vb3t+bO4E1G/M4Qs5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgN36H+yZMKoI
        M50nAAAAAElFTkSuQmCC
</value>
  </data>
</root>