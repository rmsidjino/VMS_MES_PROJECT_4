<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAACN5JREFUeF7t3c2uVFUax2EYg59g4u0YMem+L53ZA2XEHWkwJky8DEf2oCd2rwXs
        HLrY9db+rrXf9TzJP+AxkZyqen/neFDOIwAAAAAAAO7o87Ln734K9OSzsl/L/ij7ur4B6MNw/P99PxGA
        TlwevwhAJ64d/zARgKRuHf8wEYBkph7/MBGAJJ6UvS4bO/Rob8r8FiGc3OOyn8rGjvzWfCYACYgAdE4E
        oHMiAJ0TAeicCEDnRAA6JwLQORGAzokAdE4EoHMiAJ0TAeicCEDnRAA6JwKczrOyF7bZviv7pWzsyG/t
        Hn+oiOf/YfWx6M4/ysZejHafHf2ZgOf/YfWx6I4XQHs7MgKe/4cJgDWzoyLg+X+YAFhTOyICnv+HCYA1
        t/qFwU/L9uL5f5gAWHN7VVZ/e3Evnv+HCYA1tb2Pv/L8P0wArJkdcfyV5/9hAmBN7Kjjrzz/DxOAYH+X
        /WmT9lfZ2GM4ZS/Ljjr+6tuysfch0+prd+yxvpwABPt3Gbd9VVa/cj/2GN7akR/5e1Jfu2OP9+UEIJgA
        3Ob42yQAAQHYhuNvlwAEBGA9x982AQgIwDqOv30CEBCA5Rz/OQhAQACWcfznIQABAZjP8Z+LAAQEYB7H
        fz4CEBCA6Rz/OQlAQACmcfznJQABAbjN8Z+bAAQEIOb4z08AAgJwnePPQQACAjDO8echAAEB+Jjjz0UA
        AgLw/56WLT3+o/8wD6YRgIAAfOz7srHHIJqP/O0SgIAAjJsTAcffNgEICMB1UyLg+NsnAAEBiEURcPzn
        IAABAbhtLAKO/zwEICAA03wYAcd/LgIQEIDpagQc//kIQEAA5nH85yMAAQEgOwEICADZCUBAAMhOAAIC
        QHYCEBAAshOAgACQnQAEBIDsBCAgAGQnAAEBIDsBCAgA2QlAQADITgACAkB2AhAQALITgIAAkJ0ABASA
        7AQgIABkJwABASA7AQgIANkJQEAAyE4AAgJAdgIQEACyE4CAAJCdAAQEgOwEICAAZCcAAQEgOwEICADZ
        CUBAAMhOAAICQHYCEBAAshOAgACQnQAEBIDsBCDwrOzFhH1TBmckAHBST9//uMZRAXhc9uTdT4G1fij7
        o+zrt3+13BEBqMf/c9nvZV/WNwDL1eMfDnNtBPYOwHD8wz9HBGCFD49/2JoI7BmAy+MfJgKwwNjxD1sa
        gb0CcO34h4kAzBAd/7AlEdgjALeOf5gIwARTjn/Y3AhsHYCpxz9MBCAw5/iHzYnAlgGYe/zDRABG1IP6
        qWzsaG5tagS2CsDS4697U/a8DLiwdwS2CIDjhx3tGYG1AXD8cIC9IrAmAI4fDrRHBJYGwPHDHWwdgSUB
        cPxwR1tGYG4AHD80YKsIzAmA44eGbBGBOQFw/NCYGoGXZWOHd2v1MP9z8bZrez3ytilz/LCzNZ8J7DnH
        DwdpLQKOHw7WSgQcP9zJvSOQ/vg/KasPMrTqXhFIf/xfldV38lWZCNCyoyPQzfEP77AI0LqjItDd8Q8T
        AVq3dwS6Pf5hIkDr9opA98c/TARo3dYRcPwXEwFat1UEHP+ViQCtWxsBx39jIkDrlkbA8U+cCNC6uRFw
        /DMnArRuagQc/8KJAK27FQHHv3IiQOuuRcDxbzQRoHWXEXD8G08EaN0QAce/00SA1tXXZ/1f3tO61/EP
        EwG4k3sf/zARgIO1cvzDRAAO0trxDxMB2Fn9aubS45/6zRDqN1dY+mvUb+ogArCDNR/560fnf1687drq
        t1f6ouy3D942Zz4TgI2tPf56kPX7oY39/cvVAFQiAA3Y4viruQGoRADuaKvjr5YEoBIBuIMtj79aGoBK
        BOBAWx9/tSYAlQjAAfY4/mptACoRgB3tdfzVFgGoRAB2sOfxV1sFoBIB2NhnZb+WjR1NtKkHtWUAqqUR
        +LEMGDE3AnM+mm4dgGpuBBw/3DA1AnM/ld4jANXUCDh+mOhWBJb8e/ReAahuRcDxw0zXIrD0i2h7BqC6
        FgHHDwtdRmDp8Vd7B6C6jIDjh5WGCKw5/uqIAFRDBBw/bORJ2Zrjr44KQPX0/Y9AI44MANzDN2UvJuxZ
        WXcEgOzqa3fsNX25egvdEQCyE4CAAJCdAAQEgOwEICAAZCcAAQEgOwEICADZCUBAAMhOAAICQHYCEBAA
        shOAgACQnQAEBIDsBCAgAGQnAAEBIDsBCAgA2QlAQADITgACAkB2AhAQALITgIAAkJ0ABASA7AQgIABk
        JwABASA7AQgIANkJQEAAyE4AAgJAdgIQEACyE4CAAJCdAAQEgOwEICAAZCcAAQEgOwEICADZCUBAAPJ6
        /P7H3glAQAByqsf/c9m/3v5V3wQgIAD5DMc/PHe9R0AAAgKQy+XxD+s5AgIQEIA8rh3/sF4jIAABAcjh
        1vEP6zECAhAQgPObevzDeouAAAQE4NzmHv+wniIgAAEBOK96/C/Lxp6vW3tT9rSsBwIQEIBzWvqRv64e
        //OyXghAQADOx/HPIwABATgXxz+fAAQE4Dwc/zICEBCAc3D8ywlAQADa5/jXEYCAALTN8a8nAAEBaJfj
        34YABASgTY5/OwIQEID2OP5tCUBAANri+LcnAAEBaIfj34cABASgDY5/PwIQEID7c/z7EoCAANyX49+f
        AAQE4H4c/zEEIDA1AH+X/Zl835YdpR7/0j/Mo+6vsrH3wT5efe2OPYaXE4DOd9QLYM1HfttvAtD5jngB
        OP52JwCdb+8XgONvewLQ+fZ8ATj+9icAnW/PF8CnZfUr92O/rrUxAeh8e78Avij7rWzs17b7TwA63xEv
        ABFodwLQ+Y56AYhAmxOAznfkC0AE2luXAXhW9sLerj4WR6r/Ke/SLwz+UvZd2dj7Yct29PMPqz4TeFVW
        f3sRODERgM6JAHROBKBzIgCdEwHonAhA50QAOicC0DkRgM6JAHROBKBzIgCdEwHonAhA50QAOrf0DxV5
        XfakDDi5uZ8J/F72ZRmQxNQIOH5I6lYEHD8kdy0Cjh86cRkBxw+dGSLg+KFT9bcIP3/3UwAAAAAAAI72
        6NH/AKkfbiUBNQYTAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>