<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        UDTMewAAAABJRU5ErkJggg==
</value>
  </data>
</root>