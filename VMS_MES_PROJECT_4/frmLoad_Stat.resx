<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DGyjnB/DAAAAAElFTkSuQmCC
</value>
  </data>
</root>