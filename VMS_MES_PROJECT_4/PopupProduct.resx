<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>