<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        P1vjqQd80F9mAAAAAElFTkSuQmCC
</value>
  </data>
</root>