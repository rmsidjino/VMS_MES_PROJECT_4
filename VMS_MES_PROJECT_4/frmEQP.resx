<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>